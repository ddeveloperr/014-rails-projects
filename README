##Building simple Rails app and effortless learning about Devise authentication  
========================

Hi there, 
I am ddeveloperr, fall in love with open source, ROR especially, and I built this app while I was learning about authentication in Rails 4.2 using Device following [RailsApps Project] 
(http://railsapps.github.io/)

If you like it and if you are learning Ruby on Rails you can try it on your own mashine
after perform the following steps: 

1. Open the terminal
2. git clone https://github.com/ddeveloperr/rails_devise_app.git
3. cd rails_devise_app
4. bundle install
5. rails server
6. Web app will be UP and running at your browser on http://localhost:3000/ 
7. Learning by doing is the best way to become a master 

My working enviroment is Linux Ubuntu 15.04. Good luck.
________________________


Devise is a flexible authentication solution for Rails based on Warden. 

It:

Is Rack based;
Is a complete MVC solution based on Rails engines;
Allows you to have multiple models signed in at the same time;
Is based on a modularity concept: use only what you really need.
It's composed of 10 modules:

Database Authenticatable: encrypts and stores a password in the database to validate the authenticity of a user while signing in. The authentication can be done both through POST requests or HTTP Basic Authentication.
Omniauthable: adds OmniAuth (https://github.com/intridea/omniauth) support.
Confirmable: sends emails with confirmation instructions and verifies whether an account is already confirmed during sign in.
Recoverable: resets the user password and sends reset instructions.
Registerable: handles signing up users through a registration process, also allowing them to edit and destroy their account.
Rememberable: manages generating and clearing a token for remembering the user from a saved cookie.
Trackable: tracks sign in count, timestamps and IP address.
Timeoutable: expires sessions that have not been active in a specified period of time.
Validatable: provides validations of email and password. It's optional and can be customized, so you're able to define your own validations.
Lockable: locks an account after a specified number of failed sign-in attempts. Can unlock via email or after a specified time period.
Devise is guaranteed to be thread-safe on YARV. Thread-safety support on JRuby is in progress.


